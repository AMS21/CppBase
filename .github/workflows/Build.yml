name: Build

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.cfg.os }}
    strategy:
      fail-fast: false
      matrix:
        cfg:
          # Ubuntu gcc
          - { os: ubuntu-latest, compiler: g++, compiler_version: 4.9 }
          - { os: ubuntu-latest, compiler: g++, compiler_version: 5 }
          - { os: ubuntu-latest, compiler: g++, compiler_version: 6 }
          - { os: ubuntu-latest, compiler: g++, compiler_version: 7 }
          - { os: ubuntu-latest, compiler: g++, compiler_version: 8 }
          - { os: ubuntu-latest, compiler: g++, compiler_version: 9 }
          # Ubuntu clang
          - { os: ubuntu-latest, compiler: clang++, compiler_version: 9}
          - { os: ubuntu-latest, compiler: clang++, compiler_version: 10 }

    steps:
      - uses: actions/checkout@v2

      - name: get-cmake
        uses: lukka/get-cmake@v3.17.1

      - name: Install (Linux)
        if: runner.os == 'Linux'
        run: |
          # Add required repositories
          sudo add-apt-repository ppa:ubuntu-toolchain-r/test

          # Ubuntu 18.04 doesnt provide g++-4.9 so we need to use the xenial package
          # See https://askubuntu.com/a/1036152
          if [ "${{ matrix.cfg.compiler }}" = "g++" ] && [ "${{ matrix.cfg.compiler_version }}" = "4.9" ]; then
            sudo add-apt-repository 'deb http://dk.archive.ubuntu.com/ubuntu/ xenial main'
            sudo add-apt-repository 'deb http://dk.archive.ubuntu.com/ubuntu/ xenial universe'
          fi

          # Update repo list
          sudo apt-get update -m

          # Install clang
          if [ "${{ matrix.cfg.compiler }}" = "clang++" ]; then
            wget --no-check-certificate https://apt.llvm.org/llvm.sh
            chmod +x llvm.sh
            sudo ./llvm.sh "${{ matrix.cfg.compiler_version }}"
            sudo apt-get install g++-multilib -y
          fi

          # Install g++
          if [ "${{ matrix.cfg.compiler }}" = "g++" ]; then
            sudo apt-get install "g++-${{ matrix.cfg.compiler_version }}" "g++-${{ matrix.cfg.compiler_version }}-multilib" -y
          fi

      - name: Configure build directory
        run: |
          mkdir build
          cd build
          cmake -DCMAKE_CXX_COMPILER="${{ matrix.cfg.compiler }}-${{ matrix.cfg.compiler_version }}" ..

      - name: Build & Test Debug x64
        run: |
          cd build
          # Configure cmake
          cmake -DCMAKE_BUILD_TYPE=Debug ..
          # Build
          cmake --build . --clean-first
          # Run tests
          ctest --output-on-failure .

      - name: Build & Test Release x64
        run: |
          cd build
          # Configure cmake
          cmake -DCMAKE_BUILD_TYPE=Release ..
          # Build
          cmake --build . --clean-first
          # Run tests
          ctest --output-on-failure .
